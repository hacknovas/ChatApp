{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prathamesh Doni\\\\Desktop\\\\WebD\\\\Project\\\\Real Time Chat\\\\frontend\\\\src\\\\Components\\\\SingleChat.js\";\nimport { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Box, IconButton, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { ChatState } from '../Context/chatProvider';\nimport { getSender, getSenderFull } from '../config/ChatLogic';\nimport ProfileModel from './MiscLenous/ProfileModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SingleChat(_ref) {\n  let {\n    fetchAgain,\n    setfetchAgain\n  } = _ref;\n  const {\n    user,\n    selectedChat,\n    setSelectedChat\n  } = ChatState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\"\n        },\n        pb: 3,\n        px: 2,\n        w: \"100%\",\n        fontFamily: \"Work sans\",\n        d: \"flex\",\n        justifyContent: {\n          base: \"space-between\"\n        },\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          d: {\n            base: \"flex\",\n            md: \"none\"\n          },\n          icon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 39\n          }, this),\n          onClick: () => setSelectedChat(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this), !selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [getSender(user, selectedChat.user), /*#__PURE__*/_jsxDEV(ProfileModel, {\n            user: getSenderFull(user, selectedChat.user)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: selectedChat.chatName.toUpperCase()\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        d: \"flex\",\n        flexDir: \"column\",\n        justifyContent: \"flex-end\",\n        p: 3,\n        bg: \"#E8E8E8\",\n        w: \"100%\",\n        h: \"100%\",\n        borderRadius: \"lg\",\n        overflowY: \"hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      d: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      h: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"3xl\",\n        pb: 3,\n        fontFamily: \"Work sans\",\n        children: \"Click on a user to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }, this)\n  }, void 0, false);\n}\n_c = SingleChat;\nvar _c;\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"names":["ArrowBackIcon","Box","IconButton","Text","React","ChatState","getSender","getSenderFull","ProfileModel","SingleChat","fetchAgain","setfetchAgain","user","selectedChat","setSelectedChat","base","md","isGroupChat","chatName","toUpperCase"],"sources":["C:/Users/Prathamesh Doni/Desktop/WebD/Project/Real Time Chat/frontend/src/Components/SingleChat.js"],"sourcesContent":["import { ArrowBackIcon } from '@chakra-ui/icons';\r\nimport { Box, IconButton, Text } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { ChatState } from '../Context/chatProvider'\r\nimport { getSender, getSenderFull } from '../config/ChatLogic';\r\nimport ProfileModel from './MiscLenous/ProfileModel';\r\n\r\nexport default function SingleChat({ fetchAgain, setfetchAgain }) {\r\n    const { user, selectedChat, setSelectedChat } = ChatState();\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                selectedChat ?\r\n                    <div>\r\n                        <Text\r\n                            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n                            pb={3}\r\n                            px={2}\r\n                            w=\"100%\"\r\n                            fontFamily=\"Work sans\"\r\n                            d=\"flex\"\r\n                            justifyContent={{ base: \"space-between\" }}\r\n                            alignItems=\"center\"\r\n                        >\r\n\r\n                            <IconButton\r\n                                d={{ base: \"flex\", md: \"none\" }}\r\n                                icon={<ArrowBackIcon />}\r\n                                onClick={() => setSelectedChat(\"\")}\r\n                            />\r\n                            {\r\n                                (!selectedChat.isGroupChat ? (\r\n                                    <>\r\n                                        {getSender(user, selectedChat.user)}\r\n                                        <ProfileModel user={getSenderFull(user, selectedChat.user)}\r\n                                        />\r\n\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        {selectedChat.chatName.toUpperCase()}\r\n                                        {/* <UpdateGroupChatModal\r\n                                        fetchMessages={fetchMessages}\r\n                                        fetchAgain={fetchAgain}\r\n                                        setFetchAgain={setFetchAgain}\r\n                                    /> */}\r\n                                    </>\r\n                                ))}\r\n\r\n                        </Text>\r\n\r\n                        <Box\r\n                            d=\"flex\"\r\n                            flexDir=\"column\"\r\n                            justifyContent=\"flex-end\"\r\n                            p={3}\r\n                            bg=\"#E8E8E8\"\r\n                            w=\"100%\"\r\n                            h=\"100%\"\r\n                            borderRadius=\"lg\"\r\n                            overflowY=\"hidden\"\r\n                        ></Box>\r\n                    </div>\r\n                    :\r\n                    (\r\n                        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n                            <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n                                Click on a user to start chatting\r\n                            </Text>\r\n                        </Box>\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,GAAG,EAAEC,UAAU,EAAEC,IAAI,QAAQ,kBAAkB;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,SAAS,EAAEC,aAAa,QAAQ,qBAAqB;AAC9D,OAAOC,YAAY,MAAM,2BAA2B;AAAC;AAAA;AAErD,eAAe,SAASC,UAAU,OAAgC;EAAA,IAA/B;IAAEC,UAAU;IAAEC;EAAc,CAAC;EAC5D,MAAM;IAAEC,IAAI;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGT,SAAS,EAAE;EAG3D,oBACI;IAAA,UAEQQ,YAAY,gBACR;MAAA,wBACI,QAAC,IAAI;QACD,QAAQ,EAAE;UAAEE,IAAI,EAAE,MAAM;UAAEC,EAAE,EAAE;QAAO,CAAE;QACvC,EAAE,EAAE,CAAE;QACN,EAAE,EAAE,CAAE;QACN,CAAC,EAAC,MAAM;QACR,UAAU,EAAC,WAAW;QACtB,CAAC,EAAC,MAAM;QACR,cAAc,EAAE;UAAED,IAAI,EAAE;QAAgB,CAAE;QAC1C,UAAU,EAAC,QAAQ;QAAA,wBAGnB,QAAC,UAAU;UACP,CAAC,EAAE;YAAEA,IAAI,EAAE,MAAM;YAAEC,EAAE,EAAE;UAAO,CAAE;UAChC,IAAI,eAAE,QAAC,aAAa;YAAA;YAAA;YAAA;UAAA,QAAI;UACxB,OAAO,EAAE,MAAMF,eAAe,CAAC,EAAE;QAAE;UAAA;UAAA;UAAA;QAAA,QACrC,EAEG,CAACD,YAAY,CAACI,WAAW,gBACtB;UAAA,WACKX,SAAS,CAACM,IAAI,EAAEC,YAAY,CAACD,IAAI,CAAC,eACnC,QAAC,YAAY;YAAC,IAAI,EAAEL,aAAa,CAACK,IAAI,EAAEC,YAAY,CAACD,IAAI;UAAE;YAAA;YAAA;YAAA;UAAA,QACzD;QAAA,gBAEH,gBAEH;UAAA,UACKC,YAAY,CAACK,QAAQ,CAACC,WAAW;QAAE,iBAO3C;MAAA;QAAA;QAAA;QAAA;MAAA,QAEF,eAEP,QAAC,GAAG;QACA,CAAC,EAAC,MAAM;QACR,OAAO,EAAC,QAAQ;QAChB,cAAc,EAAC,UAAU;QACzB,CAAC,EAAE,CAAE;QACL,EAAE,EAAC,SAAS;QACZ,CAAC,EAAC,MAAM;QACR,CAAC,EAAC,MAAM;QACR,YAAY,EAAC,IAAI;QACjB,SAAS,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QACf;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,gBAGF,QAAC,GAAG;MAAC,CAAC,EAAC,MAAM;MAAC,UAAU,EAAC,QAAQ;MAAC,cAAc,EAAC,QAAQ;MAAC,CAAC,EAAC,MAAM;MAAA,uBAC9D,QAAC,IAAI;QAAC,QAAQ,EAAC,KAAK;QAAC,EAAE,EAAE,CAAE;QAAC,UAAU,EAAC,WAAW;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAE3C;MAAA;MAAA;MAAA;IAAA;EAEd,iBAEV;AAEX;AAAC,KArEuBV,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}