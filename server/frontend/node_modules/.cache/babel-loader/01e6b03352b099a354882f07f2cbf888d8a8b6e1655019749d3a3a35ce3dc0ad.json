{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prathamesh Doni\\\\Desktop\\\\WebD\\\\Project\\\\Real Time Chat\\\\frontend\\\\src\\\\Components\\\\MiscLenous\\\\GroupChatModal.js\",\n  _s = $RefreshSig$();\nimport { Button, FormControl, FormLabel, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useDisclosure, useToast } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { ChatState } from '../../Context/chatProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GroupChatModal(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const {\n    user,\n    chats,\n    setChats\n  } = ChatState();\n  const handleSearch = () => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: onOpen,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          fontSize: \"35px\",\n          fontFamily: \"Work sans\",\n          d: \"flex\",\n          justifyContent: \"center\",\n          children: \"create Grp Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          d: \"flex\",\n          flexDir: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Chat Name\",\n              mb: 3,\n              onChange: e => setGroupChatName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Add Users eg: John, Piyush, Jane\",\n              mb: 1,\n              onChange: e => handleSearch(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"ghost\",\n            children: \"Secondary Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(GroupChatModal, \"PHSzC1yTrtxvyG3eWGbgwqRvKTk=\", false, function () {\n  return [useDisclosure, useToast];\n});\n_c = GroupChatModal;\nvar _c;\n$RefreshReg$(_c, \"GroupChatModal\");","map":{"version":3,"names":["Button","FormControl","FormLabel","Input","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","useDisclosure","useToast","React","useState","ChatState","GroupChatModal","children","isOpen","onOpen","onClose","groupChatName","setGroupChatName","selectedUsers","setSelectedUsers","search","setSearch","searchResult","setSearchResult","loading","setLoading","toast","user","chats","setChats","handleSearch","e","target","value"],"sources":["C:/Users/Prathamesh Doni/Desktop/WebD/Project/Real Time Chat/frontend/src/Components/MiscLenous/GroupChatModal.js"],"sourcesContent":["import { Button, FormControl, FormLabel, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useDisclosure, useToast } from '@chakra-ui/react';\r\nimport React, { useState } from 'react'\r\nimport { ChatState } from '../../Context/chatProvider';\r\n\r\nexport default function GroupChatModal({ children }) {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n    const [groupChatName, setGroupChatName] = useState();\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const toast = useToast();\r\n\r\n    const { user, chats, setChats } = ChatState();\r\n\r\n    const handleSearch = () => {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <span onClick={onOpen}>Open Modal</span>\r\n\r\n            <Modal isOpen={isOpen} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader fontSize=\"35px\"\r\n                        fontFamily=\"Work sans\"\r\n                        d=\"flex\"\r\n                        justifyContent=\"center\"\r\n                    >create Grp Chat</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n                        <FormControl>\r\n                            <Input\r\n                                placeholder=\"Chat Name\"\r\n                                mb={3}\r\n                                onChange={(e) => setGroupChatName(e.target.value)}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <Input\r\n                                placeholder=\"Add Users eg: John, Piyush, Jane\"\r\n                                mb={1}\r\n                                onChange={(e) => handleSearch(e.target.value)}\r\n                            />\r\n                        </FormControl>\r\n                        {/* selected user */}\r\n                        {/* rendersearch */}\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button colorScheme='blue' mr={3} onClick={onClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant='ghost'>Secondary Action</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}