{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prathamesh Doni\\\\Desktop\\\\WebD\\\\Project\\\\Real Time Chat\\\\frontend\\\\src\\\\Authentication\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport { Box, Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, StackDivider, useToast, VStack } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n  const [show, setshow] = useState(false);\n  const [name, setname] = useState('');\n  const [email, setemail] = useState('');\n  const [pass, setpass] = useState('');\n  const [confpass, setconfpass] = useState('');\n  const [pic, setpic] = useState();\n  const [loading, setloading] = useState(false);\n  const toast = useToast();\n  let postDetails = pics => {\n    // setloading(true);\n    // if (pic === undefined) {\n    //     toast({\n    //         title: 'Please Select IMG.',\n    //         status: \"Warning.\",\n    //         duration: 5000,\n    //         isClosable: true,\n    //         position: \"bottom\"\n    //     })\n    // }\n  };\n  const submitHandler = () => {\n    setloading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n    } catch (error) {}\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      divider: /*#__PURE__*/_jsxDEV(StackDivider, {\n        borderColor: \"gray.200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 30\n      }, this),\n      spacing: \"5px\",\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        id: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter Name\",\n          onChange: e => {\n            setname(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        id: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter Email\",\n          onChange: e => {\n            setemail(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        id: \"_password\",\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: show ? \"text\" : \"password\",\n            placeholder: \"Enter Pass\",\n            onChange: e => {\n              setpass(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                show ? setshow(false) : setshow(true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        id: \"confirm_password\",\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            placeholder: \"Enter Pass\",\n            onChange: e => {\n              setconfpass(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        id: \"pics\",\n        children: /*#__PURE__*/_jsxDEV(FormLabel, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            accept: \"image/\",\n            onChange: e => {\n              postDetails(e.target.files[0]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: submitHandler,\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(SignUp, \"PqAfapUhkI60euVAIxMlwcRIBKs=\", false, function () {\n  return [useToast];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["Box","Button","FormControl","FormLabel","Input","InputGroup","InputRightElement","StackDivider","useToast","VStack","React","useState","SignUp","show","setshow","name","setname","email","setemail","pass","setpass","confpass","setconfpass","pic","setpic","loading","setloading","toast","postDetails","pics","submitHandler","password","confirmpassword","title","status","duration","isClosable","position","config","headers","error","e","target","value","files"],"sources":["C:/Users/Prathamesh Doni/Desktop/WebD/Project/Real Time Chat/frontend/src/Authentication/SignUp.js"],"sourcesContent":["import { Box, Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, StackDivider, useToast, VStack } from '@chakra-ui/react'\r\nimport React, { useState } from 'react'\r\n\r\nexport default function SignUp() {\r\n\r\n    const [show, setshow] = useState(false)\r\n\r\n    const [name, setname] = useState('')\r\n    const [email, setemail] = useState('')\r\n    const [pass, setpass] = useState('')\r\n    const [confpass, setconfpass] = useState('')\r\n    const [pic, setpic] = useState();\r\n    const [loading, setloading] = useState(false);\r\n    const toast = useToast()\r\n\r\n\r\n    let postDetails = (pics) => {\r\n        // setloading(true);\r\n        // if (pic === undefined) {\r\n        //     toast({\r\n        //         title: 'Please Select IMG.',\r\n        //         status: \"Warning.\",\r\n        //         duration: 5000,\r\n        //         isClosable: true,\r\n        //         position: \"bottom\"\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        setloading(true);\r\n        if (!name || !email || !password || !confirmpassword) {\r\n            toast({\r\n                title: \"Please Fill all the Feilds\",\r\n                status: \"warning\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"bottom\",\r\n            });\r\n            return;\r\n        }\r\n        if (password !== confirmpassword) {\r\n            toast({\r\n                title: \"Passwords Do Not Match\",\r\n                status: \"warning\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"bottom\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    \"Content-type\": \"application/json\",\r\n                },\r\n            }\r\n\r\n\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <VStack divider={<StackDivider borderColor='gray.200' />} spacing=\"5px\" align='stretch'>\r\n                <FormControl id=\"name\">\r\n                    <FormLabel>Name</FormLabel>\r\n                    <Input placeholder='Enter Name' onChange={(e) => {\r\n                        setname(e.target.value)\r\n                    }}></Input>\r\n                </FormControl>\r\n\r\n                <FormControl id=\"email\">\r\n                    <FormLabel>Email</FormLabel>\r\n                    <Input placeholder='Enter Email' onChange={(e) => {\r\n                        setemail(e.target.value)\r\n                    }}></Input>\r\n                </FormControl>\r\n\r\n\r\n                <FormControl id='_password' isRequired>\r\n                    <FormLabel>Password</FormLabel>\r\n                    <InputGroup>\r\n                        <Input type={show ? \"text\" : \"password\"} placeholder='Enter Pass' onChange={(e) => {\r\n                            setpass(e.target.value)\r\n                        }}></Input>\r\n                        <InputRightElement>\r\n                            <Button onClick={() => {\r\n                                show ? setshow(false) : setshow(true);\r\n                            }}>\r\n                            </Button>\r\n                        </InputRightElement>\r\n                    </InputGroup>\r\n                </FormControl>\r\n\r\n                <FormControl id='confirm_password' isRequired>\r\n                    <FormLabel>Confirm Password</FormLabel>\r\n                    <InputGroup>\r\n                        <Input type=\"password\" placeholder='Enter Pass' onChange={(e) => {\r\n                            setconfpass(e.target.value)\r\n                        }}></Input>\r\n                    </InputGroup>\r\n                </FormControl>\r\n\r\n                <FormControl id='pics'>\r\n                    <FormLabel>\r\n                        <Input type=\"file\" accept='image/' onChange={(e) => {\r\n                            postDetails(e.target.files[0]);\r\n                        }}>\r\n                        </Input>\r\n                    </FormLabel>\r\n                </FormControl>\r\n\r\n                <Button onClick={submitHandler}>\r\n                    SignUp\r\n                </Button>\r\n            </VStack>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}