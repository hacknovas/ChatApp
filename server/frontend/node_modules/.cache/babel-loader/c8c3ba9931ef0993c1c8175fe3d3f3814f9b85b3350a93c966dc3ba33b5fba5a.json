{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prathamesh Doni\\\\Desktop\\\\WebD\\\\Project\\\\Real Time Chat\\\\frontend\\\\src\\\\Components\\\\ScrollableChat.js\";\nimport React from 'react';\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ScrollableChat() {\n  return /*#__PURE__*/_jsxDEV(ScrollableFeed, {\n    children: messages && messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [(isSameSender(messages, m, i, user._id) || isLastMessage(messages, i, user._id)) && /*#__PURE__*/_jsxDEV(Tooltip, {\n        label: m.sender.name,\n        placement: \"bottom-start\",\n        hasArrow: true,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          mt: \"7px\",\n          mr: 1,\n          size: \"sm\",\n          cursor: \"pointer\",\n          name: m.sender.name,\n          src: m.sender.pic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: `${m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"}`,\n          marginLeft: isSameSenderMargin(messages, m, i, user._id),\n          marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n          borderRadius: \"20px\",\n          padding: \"5px 15px\",\n          maxWidth: \"75%\"\n        },\n        children: m.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this)]\n    }, m._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = ScrollableChat;\nvar _c;\n$RefreshReg$(_c, \"ScrollableChat\");","map":{"version":3,"names":["React","ScrollableFeed","ScrollableChat","messages","map","m","i","display","isSameSender","user","_id","isLastMessage","sender","name","pic","backgroundColor","marginLeft","isSameSenderMargin","marginTop","isSameUser","borderRadius","padding","maxWidth","content"],"sources":["C:/Users/Prathamesh Doni/Desktop/WebD/Project/Real Time Chat/frontend/src/Components/ScrollableChat.js"],"sourcesContent":["import React from 'react'\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\n\r\nexport default function ScrollableChat() {\r\n    return (\r\n        <ScrollableFeed>\r\n            {messages &&\r\n                messages.map((m, i) => (\r\n                    <div style={{ display: \"flex\" }} key={m._id}>\r\n                        {(isSameSender(messages, m, i, user._id) ||\r\n                            isLastMessage(messages, i, user._id)) && (\r\n                                <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                                    <Avatar\r\n                                        mt=\"7px\"\r\n                                        mr={1}\r\n                                        size=\"sm\"\r\n                                        cursor=\"pointer\"\r\n                                        name={m.sender.name}\r\n                                        src={m.sender.pic}\r\n                                    />\r\n                                </Tooltip>\r\n                            )}\r\n                        <span\r\n                            style={{\r\n                                backgroundColor: `${m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                                    }`,\r\n                                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n                                borderRadius: \"20px\",\r\n                                padding: \"5px 15px\",\r\n                                maxWidth: \"75%\",\r\n                            }}\r\n                        >\r\n                            {m.content}\r\n                        </span>\r\n                    </div>\r\n                ))}\r\n        </ScrollableFeed>\r\n    )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,uBAAuB;AAAC;AAEnD,eAAe,SAASC,cAAc,GAAG;EACrC,oBACI,QAAC,cAAc;IAAA,UACVC,QAAQ,IACLA,QAAQ,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACd;MAAK,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAA,WAC3B,CAACC,YAAY,CAACL,QAAQ,EAAEE,CAAC,EAAEC,CAAC,EAAEG,IAAI,CAACC,GAAG,CAAC,IACpCC,aAAa,CAACR,QAAQ,EAAEG,CAAC,EAAEG,IAAI,CAACC,GAAG,CAAC,kBAChC,QAAC,OAAO;QAAC,KAAK,EAAEL,CAAC,CAACO,MAAM,CAACC,IAAK;QAAC,SAAS,EAAC,cAAc;QAAC,QAAQ;QAAA,uBAC5D,QAAC,MAAM;UACH,EAAE,EAAC,KAAK;UACR,EAAE,EAAE,CAAE;UACN,IAAI,EAAC,IAAI;UACT,MAAM,EAAC,SAAS;UAChB,IAAI,EAAER,CAAC,CAACO,MAAM,CAACC,IAAK;UACpB,GAAG,EAAER,CAAC,CAACO,MAAM,CAACE;QAAI;UAAA;UAAA;UAAA;QAAA;MACpB;QAAA;QAAA;QAAA;MAAA,QAET,eACL;QACI,KAAK,EAAE;UACHC,eAAe,EAAG,GAAEV,CAAC,CAACO,MAAM,CAACF,GAAG,KAAKD,IAAI,CAACC,GAAG,GAAG,SAAS,GAAG,SACvD,EAAC;UACNM,UAAU,EAAEC,kBAAkB,CAACd,QAAQ,EAAEE,CAAC,EAAEC,CAAC,EAAEG,IAAI,CAACC,GAAG,CAAC;UACxDQ,SAAS,EAAEC,UAAU,CAAChB,QAAQ,EAAEE,CAAC,EAAEC,CAAC,EAAEG,IAAI,CAACC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE;UACxDU,YAAY,EAAE,MAAM;UACpBC,OAAO,EAAE,UAAU;UACnBC,QAAQ,EAAE;QACd,CAAE;QAAA,UAEDjB,CAAC,CAACkB;MAAO;QAAA;QAAA;QAAA;MAAA,QACP;IAAA,GA1B2BlB,CAAC,CAACK,GAAG;MAAA;MAAA;MAAA;IAAA,QA4B9C;EAAC;IAAA;IAAA;IAAA;EAAA,QACO;AAEzB;AAAC,KApCuBR,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}