{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prathamesh Doni\\\\Desktop\\\\WebD\\\\Project\\\\Real Time Chat\\\\frontend\\\\src\\\\Components\\\\SingleChat.js\",\n  _s = $RefreshSig$();\nimport { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Box, FormControl, IconButton, Input, Text } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { ChatState } from '../Context/chatProvider';\nimport { getSender, getSenderFull } from '../config/ChatLogic';\nimport ProfileModel from './MiscLenous/ProfileModel';\nimport UpdateGroupChatModal from './MiscLenous/UpdateGroupChatModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SingleChat(_ref) {\n  _s();\n  let {\n    fetchAgain,\n    setfetchAgain\n  } = _ref;\n  const {\n    user,\n    selectedChat,\n    setSelectedChat\n  } = ChatState();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const sendMessage = async () => {};\n  const typingHandler = async () => {\n    setNewMessage(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\"\n        },\n        pb: 3,\n        px: 2,\n        w: \"100%\",\n        fontFamily: \"Work sans\",\n        d: \"flex\",\n        justifyContent: {\n          base: \"space-between\"\n        },\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          d: {\n            base: \"flex\",\n            md: \"none\"\n          },\n          icon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 39\n          }, this),\n          onClick: () => setSelectedChat(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), !selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [getSender(user, selectedChat.user), /*#__PURE__*/_jsxDEV(ProfileModel, {\n            user: getSenderFull(user, selectedChat.user)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [selectedChat.chatName.toUpperCase(), /*#__PURE__*/_jsxDEV(UpdateGroupChatModal, {\n            fetchAgain: fetchAgain,\n            setfetchAgain: setfetchAgain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        d: \"flex\",\n        flexDir: \"column\",\n        justifyContent: \"flex-end\",\n        p: 3,\n        bg: \"#E8E8E8\",\n        w: \"100%\",\n        h: \"100%\",\n        borderRadius: \"lg\",\n        overflowY: \"hidden\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 43\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Go\"\n        }, void 0, false), /*#__PURE__*/_jsxDEV(FormControl, {\n          onKeyDown: sendMessage,\n          id: \"first-name\",\n          isRequired: true,\n          mt: 3,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            variant: \"filled\",\n            bg: \"#E0E0E0\",\n            placeholder: \"Enter a message..\",\n            value: newMessage,\n            onChange: typingHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      d: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      h: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"3xl\",\n        pb: 3,\n        fontFamily: \"Work sans\",\n        children: \"Click on a user to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }, this)\n  }, void 0, false);\n}\n_s(SingleChat, \"QUZrmfCdlB5IfhA31z1kwDR+k2o=\");\n_c = SingleChat;\nvar _c;\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"names":["ArrowBackIcon","Box","FormControl","IconButton","Input","Text","React","useState","ChatState","getSender","getSenderFull","ProfileModel","UpdateGroupChatModal","SingleChat","fetchAgain","setfetchAgain","user","selectedChat","setSelectedChat","messages","setMessages","loading","setLoading","newMessage","setNewMessage","sendMessage","typingHandler","e","target","value","base","md","isGroupChat","chatName","toUpperCase"],"sources":["C:/Users/Prathamesh Doni/Desktop/WebD/Project/Real Time Chat/frontend/src/Components/SingleChat.js"],"sourcesContent":["import { ArrowBackIcon } from '@chakra-ui/icons';\r\nimport { Box, FormControl, IconButton, Input, Text } from '@chakra-ui/react';\r\nimport React, { useState } from 'react'\r\nimport { ChatState } from '../Context/chatProvider'\r\nimport { getSender, getSenderFull } from '../config/ChatLogic';\r\nimport ProfileModel from './MiscLenous/ProfileModel';\r\nimport UpdateGroupChatModal from './MiscLenous/UpdateGroupChatModal';\r\n\r\nexport default function SingleChat({ fetchAgain, setfetchAgain }) {\r\n    const { user, selectedChat, setSelectedChat } = ChatState();\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n    const sendMessage = async () => {\r\n\r\n    }\r\n\r\n    const typingHandler = async () => {\r\n        setNewMessage(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                selectedChat ?\r\n                    <div>\r\n                        <Text\r\n                            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n                            pb={3}\r\n                            px={2}\r\n                            w=\"100%\"\r\n                            fontFamily=\"Work sans\"\r\n                            d=\"flex\"\r\n                            justifyContent={{ base: \"space-between\" }}\r\n                            alignItems=\"center\"\r\n                        >\r\n\r\n                            <IconButton\r\n                                d={{ base: \"flex\", md: \"none\" }}\r\n                                icon={<ArrowBackIcon />}\r\n                                onClick={() => setSelectedChat(\"\")}\r\n                            />\r\n                            {\r\n                                (!selectedChat.isGroupChat ? (\r\n                                    <>\r\n                                        {getSender(user, selectedChat.user)}\r\n                                        <ProfileModel user={getSenderFull(user, selectedChat.user)}\r\n                                        />\r\n\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        {selectedChat.chatName.toUpperCase()}\r\n                                        <UpdateGroupChatModal\r\n                                            fetchAgain={fetchAgain}\r\n                                            setfetchAgain={setfetchAgain}\r\n                                        />\r\n                                    </>\r\n                                ))}\r\n\r\n                        </Text>\r\n\r\n                        <Box\r\n                            d=\"flex\"\r\n                            flexDir=\"column\"\r\n                            justifyContent=\"flex-end\"\r\n                            p={3}\r\n                            bg=\"#E8E8E8\"\r\n                            w=\"100%\"\r\n                            h=\"100%\"\r\n                            borderRadius=\"lg\"\r\n                            overflowY=\"hidden\"\r\n                        >\r\n                            {\r\n                                loading ? <div>Loading</div> : <>Go</>\r\n                            }\r\n\r\n                            <FormControl onKeyDown={sendMessage} id=\"first-name\" isRequired mt={3}>\r\n                                <Input\r\n                                    variant=\"filled\"\r\n                                    bg=\"#E0E0E0\"\r\n                                    placeholder=\"Enter a message..\"\r\n                                    value={newMessage}\r\n                                    onChange={typingHandler}\r\n                                />\r\n                            </FormControl>\r\n                        </Box>\r\n                    </div>\r\n                    :\r\n                    (\r\n                        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n                            <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n                                Click on a user to start chatting\r\n                            </Text>\r\n                        </Box>\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}