{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prathamesh Doni\\\\Desktop\\\\WebD\\\\Project\\\\Real Time Chat\\\\frontend\\\\src\\\\Components\\\\MyChats.js\",\n  _s = $RefreshSig$();\nimport { AddIcon } from '@chakra-ui/icons';\nimport { Box, Button, Stack, Text, useToast } from '@chakra-ui/react';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { getSender } from '../config/ChatLogic';\nimport { ChatState } from '../Context/chatProvider';\nimport ChatLoading from './ChatLoading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyChats() {\n  _s();\n  const [loggedUser, setLoggedUser] = useState(JSON.parse(localStorage.getItem(\"userInfo\")));\n  const {\n    chats,\n    setchats,\n    setSelectedChat,\n    selectedChat,\n    user,\n    setuser\n  } = ChatState();\n  const toast = useToast();\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n      setchats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n  useEffect(() => {\n    return () => {\n      fetchChats();\n      console.log(chats);\n    };\n    // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    d: {\n      base: selectedChat ? \"none\" : \"flex\",\n      md: \"flex\"\n    },\n    flexDir: \"column\",\n    alignItems: \"center\",\n    p: 3,\n    bg: \"white\",\n    w: {\n      base: \"100%\",\n      md: \"31%\"\n    },\n    borderRadius: \"lg\",\n    borderWidth: \"1px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      pb: 3,\n      px: 3,\n      fontSize: {\n        base: \"28px\",\n        md: \"30px\"\n      },\n      fontFamily: \"Work sans\",\n      d: \"flex\",\n      w: \"100%\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: \"My Chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      d: \"flex\",\n      flexDir: \"column\",\n      p: 3,\n      bg: \"#F8F8F8\",\n      w: \"100%\",\n      h: \"100%\",\n      borderRadius: \"lg\",\n      overflowY: \"hidden\",\n      children: chats ? /*#__PURE__*/_jsxDEV(Stack, {\n        overflowY: \"scroll\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(Box, {\n          onClick: () => setSelectedChat(chat),\n          cursor: \"pointer\",\n          bg: selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\",\n          color: selectedChat === chat ? \"white\" : \"black\",\n          px: 3,\n          py: 2,\n          borderRadius: \"lg\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: !chat.isGroupChat ? getSender(loggedUser, chat.user) : chat.chatName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)\n        }, chat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(MyChats, \"Jn/3ls/KlBzk6tUPC4y3vAy0wd8=\", false, function () {\n  return [useToast];\n});\n_c = MyChats;\nvar _c;\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["AddIcon","Box","Button","Stack","Text","useToast","axios","React","useEffect","useState","getSender","ChatState","ChatLoading","MyChats","loggedUser","setLoggedUser","JSON","parse","localStorage","getItem","chats","setchats","setSelectedChat","selectedChat","user","setuser","toast","fetchChats","config","headers","Authorization","token","data","get","error","title","description","status","duration","isClosable","position","console","log","base","md","map","chat","isGroupChat","chatName","_id"],"sources":["C:/Users/Prathamesh Doni/Desktop/WebD/Project/Real Time Chat/frontend/src/Components/MyChats.js"],"sourcesContent":["import { AddIcon } from '@chakra-ui/icons';\r\nimport { Box, Button, Stack, Text, useToast } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getSender } from '../config/ChatLogic';\r\nimport { ChatState } from '../Context/chatProvider';\r\nimport ChatLoading from './ChatLoading';\r\n\r\nexport default function MyChats() {\r\n  const [loggedUser, setLoggedUser] = useState(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n  const { chats, setchats, setSelectedChat, selectedChat, user, setuser } = ChatState();\r\n\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setchats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      \r\n      fetchChats();\r\n      console.log(chats)\r\n      \r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        {/* <GroupChatModal>\r\n          <Button\r\n            d=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal> */}\r\n      </Box>\r\n      <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.user)\r\n                    : chat.chatName}\r\n                </Text>\r\n                {/* {chat.latestMessage && (\r\n                  <Text fontSize=\"xs\">\r\n                    <b>{chat.latestMessage.sender.name} : </b>\r\n                    {chat.latestMessage.content.length > 50\r\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                      : chat.latestMessage.content}\r\n                  </Text>\r\n                )} */}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}