{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prathamesh Doni\\\\Desktop\\\\WebD\\\\Project\\\\Real Time Chat\\\\frontend\\\\src\\\\Components\\\\MyChats.js\",\n  _s = $RefreshSig$();\nimport { Box, Stack, Text, useToast } from '@chakra-ui/react';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { getSender } from '../config/ChatLogic';\nimport { ChatState } from '../Context/chatProvider';\nimport ChatLoading from './ChatLoading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyChats() {\n  _s();\n  const {\n    chats,\n    setchats,\n    setSelectedChat,\n    selectedChat,\n    user,\n    setuser\n  } = ChatState();\n  const toast = useToast();\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config, {\n        new: true\n      });\n      console.log(data);\n      setchats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n  useEffect(() => {\n    fetchChats();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <>\n    //   {\n    //     chats ? <div>\n    //       {\n    //         chats.map((cht) => {\n    //           return (<Text key={cht._id}>\n    //             {\n    //               !cht.isGroupChat\n    //                 ? getSender(user, cht.user)\n    //                 : cht.chatName\n    //             }\n    //           </Text>)\n    //         })\n    //       }\n    //     </div> : <div>Bye</div>\n    //   }\n    // </>\n    //////////////////////////////\n    _jsxDEV(Box, {\n      d: {\n        base: selectedChat ? \"none\" : \"flex\",\n        md: \"flex\"\n      },\n      flexDir: \"column\",\n      alignItems: \"center\",\n      p: 3,\n      bg: \"white\",\n      w: {\n        base: \"100%\",\n        md: \"31%\"\n      },\n      borderRadius: \"lg\",\n      borderWidth: \"1px\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        pb: 3,\n        px: 3,\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\"\n        },\n        fontFamily: \"Work sans\",\n        d: \"flex\",\n        w: \"100%\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: \"My Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        d: \"flex\",\n        flexDir: \"column\",\n        p: 3,\n        bg: \"#F8F8F8\",\n        w: \"100%\",\n        h: \"100%\",\n        borderRadius: \"lg\",\n        overflowY: \"hidden\",\n        children: chats ? /*#__PURE__*/_jsxDEV(Stack, {\n          overflowY: \"scroll\",\n          children: chats.map(chat => /*#__PURE__*/_jsxDEV(Box, {\n            onClick: () => setSelectedChat(chat),\n            cursor: \"pointer\",\n            bg: selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\",\n            color: selectedChat === chat ? \"white\" : \"black\",\n            px: 3,\n            py: 2,\n            borderRadius: \"lg\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              children: !chat.isGroupChat ? getSender(loggedUser, chat.user) : chat.chatName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, chat._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(MyChats, \"oyZZPyIuI3wCrd4nP62UGHgis08=\", false, function () {\n  return [useToast];\n});\n_c = MyChats;\nvar _c;\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["Box","Stack","Text","useToast","axios","React","useEffect","useState","getSender","ChatState","ChatLoading","MyChats","chats","setchats","setSelectedChat","selectedChat","user","setuser","toast","fetchChats","config","headers","Authorization","token","data","get","new","console","log","error","title","description","status","duration","isClosable","position","base","md","map","chat","isGroupChat","loggedUser","chatName","_id"],"sources":["C:/Users/Prathamesh Doni/Desktop/WebD/Project/Real Time Chat/frontend/src/Components/MyChats.js"],"sourcesContent":["import { Box, Stack, Text, useToast } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getSender } from '../config/ChatLogic';\r\nimport { ChatState } from '../Context/chatProvider';\r\nimport ChatLoading from './ChatLoading';\r\n\r\nexport default function MyChats() {\r\n  const { chats, setchats, setSelectedChat, selectedChat, user, setuser } = ChatState();\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config, { new: true });\r\n      console.log(data);\r\n      setchats(data);\r\n\r\n\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchChats()\r\n  }, []);\r\n\r\n  return (\r\n    // <>\r\n    //   {\r\n    //     chats ? <div>\r\n    //       {\r\n    //         chats.map((cht) => {\r\n    //           return (<Text key={cht._id}>\r\n    //             {\r\n    //               !cht.isGroupChat\r\n    //                 ? getSender(user, cht.user)\r\n    //                 : cht.chatName\r\n    //             }\r\n    //           </Text>)\r\n    //         })\r\n    //       }\r\n    //     </div> : <div>Bye</div>\r\n    //   }\r\n    // </>\r\n\r\n\r\n\r\n    //////////////////////////////\r\n\r\n\r\n\r\n\r\n    <Box\r\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        {/* <GroupChatModal>\r\n          <Button\r\n            d=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal> */}\r\n      </Box>\r\n\r\n      <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.user)\r\n                    : chat.chatName}\r\n                </Text>\r\n                {/* {chat.latestMessage && (\r\n                  <Text fontSize=\"xs\">\r\n                    <b>{chat.latestMessage.sender.name} : </b>\r\n                    {chat.latestMessage.content.length > 50\r\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                      : chat.latestMessage.content}\r\n                  </Text>\r\n                )} */}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}